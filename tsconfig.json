{
  "compilerOptions": {
    // Declarations
    "declaration": true,
    
    // Project options
    "lib": ["ESNext", "DOM"], // specifies which default set of type definitions to use ("DOM", "ES6", etc)
    "removeComments": true, // Strips all comments from TypeScript files when converting into JavaScript- you rarely read compiled code so this saves space

    // Source Map
    "sourceMap": true, // enables the use of source maps for debuggers and error reporting etc

    // Strict Checks
    "alwaysStrict": true, // Ensures that your files are parsed in the ECMAScript strict mode, and emit “use strict” for each source file.
    "allowUnreachableCode": false, // pick up dead code paths
    "noImplicitAny": true, // In some cases where no type annotations are present, TypeScript will fall back to a type of any for a variable when it cannot infer the type.
    "strictNullChecks": true, // When strictNullChecks is true, null and undefined have their own distinct types and you’ll get a type error if you try to use them where a concrete value is expected.

    // Linter Checks
    "noImplicitReturns": true,
    "noUncheckedIndexedAccess": true, // accessing index must always check for undefined
    "noUnusedLocals": true, // Report errors on unused local variables.
    "noUnusedParameters": true // Report errors on unused parameters in functions
  },
  "include": ["./**/*.ts"],
  "exclude": ["node_modules/**/*", "dist/**/*"]
}
